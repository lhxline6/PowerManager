function FileData_Pairs(x)
{
x.t("debugging","mode");
x.t("debugging","provides");
x.t("debugging","examine");
x.t("debugging","complicated");
x.t("debugging","application");
x.t("debugging","either");
x.t("statements","start");
x.t("unlike","traditional");
x.t("proceeding","massive");
x.t("available","virtual");
x.t("protected","u.s");
x.t("within","visual");
x.t("every","time");
x.t("studio","choose");
x.t("studio","using");
x.t("create","recording");
x.t("ensures","application");
x.t("source","statements");
x.t("completion","stops");
x.t("u.s","international");
x.t("creates","recording");
x.t("user","network");
x.t("user","input");
x.t("reaches","previous");
x.t("until","reaches");
x.t("program","proceeding");
x.t("massive","production");
x.t("mode","breakpoints");
x.t("mode","overview");
x.t("mode","recordings");
x.t("mode","interact");
x.t("mode","using");
x.t("workstation","recording");
x.t("workstation","user\u2019s");
x.t("interface","recording");
x.t("interface","steps");
x.t("necessary","achieve");
x.t("support","1998-2009");
x.t("breakpoints","add");
x.t("breakpoints","step");
x.t("best","start");
x.t("time","debug");
x.t("time","past");
x.t("breakpoint","exception");
x.t("breakpoint","data");
x.t("initiate","reverse");
x.t("whenever","accepted");
x.t("execution","operation");
x.t("execution","feature");
x.t("execution","visual");
x.t("execution","replaying");
x.t("execution","analogous");
x.t("execution","except");
x.t("multiple","replay");
x.t("international","intellectual");
x.t("product","protected");
x.t("product","covered");
x.t("property","laws");
x.t("listed","patent.txt");
x.t("start","debugging");
x.t("start","replay");
x.t("start","practicing");
x.t("single","reverse");
x.t("file","found");
x.t("found","http://www.vmware.com/go/patents");
x.t("menu","replay");
x.t("menu","integrated");
x.t("machine","creates");
x.t("machine","runs");
x.t("add","data");
x.t("during","recording");
x.t("network","whenever");
x.t("network","during");
x.t("network","appears");
x.t("intellectual","property");
x.t("overview","replay");
x.t("circumstances","multiple");
x.t("debugger","implements");
x.t("debugger","starts");
x.t("forward","execution");
x.t("operation","replay");
x.t("manual","given");
x.t("virtual","machine");
x.t("virtual","debugger");
x.t("trivial","code");
x.t("provides","reverse");
x.t("continue","reverse");
x.t("find","specific");
x.t("locals","stack");
x.t("stack","frames");
x.t("examine","threads");
x.t("laws","product");
x.t("input","connected");
x.t("input","connect");
x.t("recording","within");
x.t("recording","create");
x.t("recording","ensures");
x.t("recording","interface");
x.t("recording","find");
x.t("recording","recording");
x.t("recording","vmware");
x.t("recording","replay");
x.t("recording","application");
x.t("recording","debug");
x.t("recording","using");
x.t("yourself","documented");
x.t("accepted","user");
x.t("complicated","best");
x.t("vmware","workstation");
x.t("vmware","product");
x.t("vmware","menu");
x.t("frames","unlike");
x.t("replays","start");
x.t("appears","accept");
x.t("accept","user");
x.t("feature","reverse");
x.t("stops","recording");
x.t("implements","reverse");
x.t("recordings","replay");
x.t("step","source");
x.t("achieve","single");
x.t("cursor","vmware");
x.t("steps","necessary");
x.t("steps","yourself");
x.t("connected","network");
x.t("code","send");
x.t("code","hello");
x.t("technical","support");
x.t("replay","debugging");
x.t("replay","mode");
x.t("replay","recording");
x.t("replay","vmware");
x.t("replay","steps");
x.t("given","recording");
x.t("previous","breakpoint");
x.t("visual","studio");
x.t("practicing","trivial");
x.t("specific","time");
x.t("send","feedback");
x.t("exception","initiate");
x.t("1998-2009","vmware");
x.t("runs","until");
x.t("runs","application");
x.t("hello","world");
x.t("data","breakpoints");
x.t("data","breakpoint");
x.t("interact","user");
x.t("behaves","every");
x.t("patent.txt","file");
x.t("traditional","debugging");
x.t("replaying","recording");
x.t("production","code");
x.t("application","available");
x.t("application","completion");
x.t("application","replays");
x.t("application","visual");
x.t("application","runs");
x.t("application","behaves");
x.t("application","debug");
x.t("documented","vmware");
x.t("choose","create");
x.t("choose","start");
x.t("choose","reverse");
x.t("feedback","technical");
x.t("debug","replay");
x.t("debug","application");
x.t("reverse","execution");
x.t("reverse","continue");
x.t("reverse","run");
x.t("either","within");
x.t("starts","virtual");
x.t("analogous","forward");
x.t("except","application");
x.t("run","cursor");
x.t("using","workstation");
x.t("using","replay");
x.t("connect","network");
x.t("past","circumstances");
x.t("world","program");
x.t("covered","patents");
x.t("integrated","virtual");
x.t("user\u2019s","manual");
x.t("threads","locals");
x.t("patents","listed");
}
